import { QueryField } from './types';
export declare const operatorFunctions: {
    [x: string]: ((vals: import("./types").ComparisonObject) => string) | ((vals: import("./types/queryBuilder/numeric").NumericalOpObject) => string);
    $add: (vals: import("./types/queryBuilder/numeric").NumericalOpObject) => string;
    $sub: (vals: import("./types/queryBuilder/numeric").NumericalOpObject) => string;
    $multi: (vals: import("./types/queryBuilder/numeric").NumericalOpObject) => string;
    $div: (vals: import("./types/queryBuilder/numeric").NumericalOpObject) => string;
    $lt: (vals: import("./types").ComparisonObject) => string;
    $gt: (vals: import("./types").ComparisonObject) => string;
    $lte: (vals: import("./types").ComparisonObject) => string;
    $gte: (vals: import("./types").ComparisonObject) => string;
    $eq: (vals: import("./types").ComparisonObject) => string;
    $neq: (vals: import("./types").ComparisonObject) => string;
};
export declare const handleError: (arg: QueryField) => Error;
export declare const queryBuilder: (arg: QueryField) => string;
